#!/bin/bash

################################################################################
#                                                                              #
#  This script takes the logfile of a batch of testruns with the same          #
#  parameters (as generated by mara.sh) and compresses the result into a       #
#  table. This can be used to re-evaluate a logfile, but however, the          #
#  test parameters which are located on the first line of the file generated   #
#  by mara.sh can not be reconstructed.                                        #
#                                                                              #
################################################################################


simpleLogPath=$1

maxSeed=0

totalTimeMara=0
totalTimeMalloc=0
totalDifference=0

totalMemory=0
totalPageLoad=0
corrupted=0

{ while read -r type seed t memory pageLoad checkSuccess
do
    if [ "${type}" == "mara" ]
    then
        totalTimeMara=$(echo ${totalTimeMara} + ${t} | bc)
        totalPageLoad=$(echo ${totalPageLoad} + ${pageLoad} | bc)
        totalMemory=$(echo ${totalMemory} + ${memory} | bc)
        maxSeed=$((maxSeed + 1))
        if [ "$checkSuccess" == "0" ]
        then
            corrupted=$((corrupted+1))
        fi
    elif [ "${type}" == "malloc" ]
    then
        totalTimeMalloc=$(echo ${totalTimeMalloc} + ${t} | bc)
    fi
done } < ${simpleLogPath}.log

totalDifference=$(echo "scale = 8; ${totalTimeMara} - ${totalTimeMalloc}" | bc)
factor=$(echo "scale = 6; ${totalTimeMara} / ${totalTimeMalloc}" | bc)

avrgMara=$(echo "scale = 8; ${totalTimeMara} / ${maxSeed}" | bc)
avrgMalloc=$(echo "scale = 8; ${totalTimeMalloc} / ${maxSeed}" | bc)
avrgDifference=$(echo "scale = 8; ${totalDifference} / ${maxSeed}" | bc)
avrgPageLoad=$(echo "scale = 8; ${totalPageLoad} / ${maxSeed}" | bc)
avrgMemory=$(echo "${totalMemory} / ${maxSeed}" | bc)

{
printf "%-10s %-10s %-10s %-10s\n" " " "total" "average" "factor"
printf "%-10s %-10s %-10s %-10s\n" "mara" ${totalTimeMara} ${avrgMara} ${factor}
printf "%-10s %-10s %-10s %-10s\n" "malloc" ${totalTimeMalloc} ${avrgMalloc} 1
printf "%-10s %-10s %-10s\n" "difference" ${totalDifference} ${avrgDifference}

echo "Corrupted blocks: ${corrupted}, average page load: ${avrgPageLoad}, average memory requested: ${avrgMemory}"
} >> "${simpleLogPath}-eval.log"